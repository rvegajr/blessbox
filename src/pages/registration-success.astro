---
// üéâ REGISTRATION SUCCESS PAGE - THE MOMENT OF PURE JOY! ‚ú®
// This is where users see their QR code after successful registration! üéä

import BaseLayout from '../layouts/BaseLayout.astro';
import Text from '../components/fundations/elements/Text.astro';
import Button from '../components/fundations/elements/Button.astro';
import { CheckInTokenService } from '../implementations/checkin/CheckInTokenService';

// Get the registration ID from URL params
const { registrationId } = Astro.url.searchParams.get('id') ? 
  { registrationId: Astro.url.searchParams.get('id') } : 
  { registrationId: null };

let qrCodeData = null;
let registrationData = null;
let error = null;

if (registrationId) {
  try {
    // üéä Generate the magical check-in token!
    const tokenService = new CheckInTokenService();
    const checkInToken = await tokenService.generateToken(registrationId);
    
    // üåü Create the check-in URL for the QR code
    const baseUrl = Astro.url.origin;
    const checkInUrl = `${baseUrl}/check-in/${checkInToken}`;
    
    // üéØ Generate QR code data URL
    const QRCode = await import('qrcode');
    const qrCodeDataUrl = await QRCode.toDataURL(checkInUrl, {
      width: 300,
      margin: 2,
      color: {
        dark: '#1f2937',
        light: '#ffffff'
      }
    });
    
    qrCodeData = {
      token: checkInToken,
      url: checkInUrl,
      dataUrl: qrCodeDataUrl
    };
    
    // TODO: Get registration details for display
    registrationData = {
      id: registrationId,
      name: 'Registration User', // This would come from actual registration data
      email: 'user@example.com'
    };
    
  } catch (e) {
    console.error('üíî Error generating QR code:', e);
    error = 'Failed to generate your check-in QR code. Please contact support.';
  }
} else {
  error = 'No registration ID provided. Please complete registration first.';
}
---

<BaseLayout
  title="Registration Successful - BlessBox"
  description="Your registration is complete! Show this QR code to organization staff for check-in."
  hideNav={true}
  hideFooter={true}
>
  <div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
    <div class="max-w-md w-full">
      
      {error ? (
        <!-- Error State - OH NO! üò± -->
        <div class="bg-white rounded-3xl shadow-2xl p-8 text-center">
          <div class="text-red-500 text-6xl mb-4">‚ùå</div>
          <Text tag="h1" variant="textXL" class="font-bold text-gray-800 mb-4">
            Oops! Something went wrong
          </Text>
          <Text tag="p" variant="textBase" class="text-gray-600 mb-6">
            {error}
          </Text>
          <Button variant="primary" size="lg" class="w-full">
            <a href="/" class="block w-full">Return to Home</a>
          </Button>
        </div>
      ) : (
        <!-- Success State - PURE JOY! üéâ -->
        <div class="bg-white rounded-3xl shadow-2xl overflow-hidden">
          
          <!-- Header Section -->
          <div class="bg-gradient-to-r from-blue-600 to-indigo-600 p-6 text-center text-white">
            <div class="text-5xl mb-2">üéâ</div>
            <Text tag="h1" variant="textXL" class="font-bold mb-2">
              Registration Successful!
            </Text>
            <Text tag="p" variant="textBase" class="opacity-90">
              You're all set! Show this QR code to staff.
            </Text>
          </div>
          
          <!-- Important Warning -->
          <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 m-4 rounded-lg">
            <div class="flex items-start">
              <div class="text-yellow-400 text-2xl mr-3">‚ö†Ô∏è</div>
              <div>
                <Text tag="p" variant="textSM" class="font-semibold text-yellow-800 mb-1">
                  IMPORTANT: Keep this page open!
                </Text>
                <Text tag="p" variant="textXS" class="text-yellow-700">
                  Don't close your browser or navigate away until you've been checked in by staff.
                </Text>
              </div>
            </div>
          </div>
          
          <!-- QR Code Section -->
          {qrCodeData && (
            <div class="p-6 text-center">
              <Text tag="h2" variant="textLG" class="font-semibold text-gray-800 mb-4">
                üéØ Your Check-In QR Code
              </Text>
              
              <!-- QR Code Display -->
              <div class="bg-white border-4 border-gray-200 rounded-2xl p-6 mb-4 inline-block shadow-lg">
                <img 
                  src={qrCodeData.dataUrl} 
                  alt="Check-in QR Code" 
                  class="w-64 h-64 mx-auto"
                  style="image-rendering: pixelated;"
                />
              </div>
              
              <!-- QR Code URL -->
              <div class="bg-gray-50 rounded-lg p-3 mb-4">
                <Text tag="p" variant="textXS" class="text-gray-500 mb-1">
                  QR Code URL:
                </Text>
                <Text tag="p" variant="textSM" class="font-mono text-gray-700 break-all">
                  {qrCodeData.url}
                </Text>
              </div>
              
              <!-- Instructions -->
              <div class="bg-blue-50 rounded-lg p-4 mb-4">
                <Text tag="h3" variant="textBase" class="font-semibold text-blue-800 mb-2">
                  üì± How to use this QR code:
                </Text>
                <ol class="text-left text-blue-700 space-y-1">
                  <li class="text-sm">1. Present your phone to the organization staff</li>
                  <li class="text-sm">2. They will scan this QR code with their device</li>
                  <li class="text-sm">3. You'll be automatically checked in - no searching needed!</li>
                  <li class="text-sm">4. Keep this page open until check-in is complete</li>
                </ol>
              </div>
            </div>
          )}
          
          <!-- Action Buttons -->
          <div class="p-6 bg-gray-50 space-y-3">
            <!-- Add to Wallet (Future Feature) -->
            <Button variant="secondary" size="lg" class="w-full opacity-50 cursor-not-allowed">
              üì± Add to Wallet (Coming Soon)
            </Button>
            
            <!-- Edit Details -->
            <Button variant="ghost" size="base" class="w-full">
              ‚úèÔ∏è Edit My Registration Details
            </Button>
            
            <!-- Help/Support -->
            <div class="text-center pt-2">
              <Text tag="p" variant="textXS" class="text-gray-500">
                Need help? Contact the organization staff or 
                <a href="mailto:support@blessbox.app" class="text-blue-600 hover:underline">support@blessbox.app</a>
              </Text>
            </div>
          </div>
          
        </div>
      )}
      
    </div>
  </div>
  
  <!-- JavaScript for Page Protection -->
  <script>
    // üõ°Ô∏è Protect against accidental page closure
    let hasBeenCheckedIn = false;
    
    // Warn user before leaving
    window.addEventListener('beforeunload', (e) => {
      if (!hasBeenCheckedIn) {
        e.preventDefault();
        e.returnValue = 'Are you sure you want to leave? You haven\'t been checked in yet!';
        return e.returnValue;
      }
    });
    
    // Store QR data in localStorage as backup
    if (typeof localStorage !== 'undefined') {
      const qrData = {
        timestamp: Date.now(),
        url: document.querySelector('[alt="Check-in QR Code"]')?.src,
        checkInUrl: document.querySelector('.font-mono')?.textContent?.trim()
      };
      localStorage.setItem('blessbox-checkin-qr', JSON.stringify(qrData));
    }
    
    // üîÑ Real-time status checking
    const checkInToken = document.querySelector('.font-mono')?.textContent?.trim()?.split('/').pop();
    
    if (checkInToken) {
      // Check status every 5 seconds
      const statusInterval = setInterval(async () => {
        try {
          const response = await fetch(`/api/check-in/${checkInToken}/status`);
          const result = await response.json();
          
          if (result.success && result.status.isCheckedIn) {
            // üéâ USER HAS BEEN CHECKED IN! Show celebration!
            hasBeenCheckedIn = true;
            clearInterval(statusInterval);
            
            // Update the page to show success
            document.body.innerHTML = `
              <div class="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 flex items-center justify-center p-4">
                <div class="max-w-md w-full bg-white rounded-3xl shadow-2xl p-8 text-center">
                  <div class="text-6xl mb-4">üéâ</div>
                  <h1 class="text-2xl font-bold text-green-800 mb-4">You're Checked In!</h1>
                  <p class="text-green-600 mb-4">Welcome! You've been successfully checked in.</p>
                  <p class="text-sm text-gray-500">Checked in at: ${new Date(result.status.checkedInAt).toLocaleString()}</p>
                  <p class="text-sm text-gray-500">Checked in by: ${result.status.checkedInBy}</p>
                  <div class="mt-6">
                    <button onclick="window.close()" class="bg-green-600 text-white px-6 py-3 rounded-full hover:bg-green-700">
                      Close Window
                    </button>
                  </div>
                </div>
              </div>
            `;
            
            // Celebrate with confetti (if available)
            if (typeof confetti !== 'undefined') {
              confetti({
                particleCount: 100,
                spread: 70,
                origin: { y: 0.6 }
              });
            }
          }
        } catch (error) {
          console.log('Status check failed (non-critical):', error);
        }
      }, 5000);
      
      // Stop checking after 30 minutes
      setTimeout(() => {
        clearInterval(statusInterval);
      }, 30 * 60 * 1000);
    }
    
    console.log('üéâ Registration success page loaded with PURE JOY!');
  </script>
</BaseLayout>