---
// üîç CHECK-IN SCANNING PAGE - WHERE THE MAGIC HAPPENS! ‚ú®
// This is the page that organization workers see when they scan QR codes! üéØ

import BaseLayout from '../../layouts/BaseLayout.astro';
import Text from '../../components/fundations/elements/Text.astro';
import Button from '../../components/fundations/elements/Button.astro';
import { CheckInTokenService } from '../../implementations/checkin/CheckInTokenService';
import { RegistrationCheckInService } from '../../implementations/checkin/RegistrationCheckInService';

// Get the token from URL params
const { token } = Astro.params;

let registration = null;
let checkInStatus = null;
let error = null;

if (token) {
  try {
    // üîç Validate the token and get registration details
    const tokenService = new CheckInTokenService();
    const checkInService = new RegistrationCheckInService();
    
    registration = await tokenService.validateToken(token);
    
    if (registration) {
      checkInStatus = await checkInService.getCheckInStatus(token);
      console.log(`üéØ Token validated for registration: ${registration.id}`);
    } else {
      error = 'Invalid or expired check-in token. Please ask the user to refresh their registration page.';
    }
    
  } catch (e) {
    console.error('üíî Error validating check-in token:', e);
    error = 'System error while validating check-in token. Please try again.';
  }
} else {
  error = 'No check-in token provided in URL.';
}
---

<BaseLayout
  title="Check-In Scanner - BlessBox"
  description="Scan QR codes to check in registered users instantly"
  hideNav={false}
  hideFooter={true}
>
  <div class="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-4">
    <div class="max-w-2xl mx-auto">
      
      {error ? (
        <!-- Error State - HANDLE WITH GRACE! ü§ù -->
        <div class="bg-white rounded-3xl shadow-xl p-8 text-center">
          <div class="text-red-500 text-6xl mb-4">‚ùå</div>
          <Text tag="h1" variant="textXL" class="font-bold text-gray-800 mb-4">
            Check-In Error
          </Text>
          <Text tag="p" variant="textBase" class="text-gray-600 mb-6">
            {error}
          </Text>
          <div class="space-y-3">
            <Button variant="primary" size="lg" class="w-full">
              <a href="/dashboard" class="block w-full">Return to Dashboard</a>
            </Button>
            <Button variant="ghost" size="base" class="w-full">
              Try Scanning Again
            </Button>
          </div>
        </div>
        
      ) : checkInStatus?.isCheckedIn ? (
        <!-- Already Checked In - SHOW STATUS! ‚úÖ -->
        <div class="bg-white rounded-3xl shadow-xl overflow-hidden">
          
          <!-- Header -->
          <div class="bg-green-600 p-6 text-center text-white">
            <div class="text-5xl mb-2">‚úÖ</div>
            <Text tag="h1" variant="textXL" class="font-bold mb-2">
              Already Checked In
            </Text>
            <Text tag="p" variant="textBase" class="opacity-90">
              This person has already been processed
            </Text>
          </div>
          
          <!-- User Details -->
          <div class="p-6">
            <Text tag="h2" variant="textLG" class="font-semibold text-gray-800 mb-4">
              üë§ Registration Details
            </Text>
            
            <div class="bg-gray-50 rounded-lg p-4 mb-4">
              <div class="grid grid-cols-1 gap-3">
                {registration?.registrationData && Object.entries(registration.registrationData).map(([key, value]) => (
                  <div class="flex justify-between">
                    <Text tag="span" variant="textSM" class="font-medium text-gray-600 capitalize">
                      {key.replace(/([A-Z])/g, ' $1').trim()}:
                    </Text>
                    <Text tag="span" variant="textSM" class="text-gray-800">
                      {String(value)}
                    </Text>
                  </div>
                ))}
              </div>
            </div>
            
            <!-- Check-in Info -->
            <div class="bg-green-50 rounded-lg p-4 mb-6">
              <Text tag="h3" variant="textBase" class="font-semibold text-green-800 mb-2">
                ‚úÖ Check-in Information
              </Text>
              <div class="space-y-1 text-green-700">
                <Text tag="p" variant="textSM">
                  <strong>Checked in at:</strong> {new Date(checkInStatus.checkedInAt).toLocaleString()}
                </Text>
                <Text tag="p" variant="textSM">
                  <strong>Checked in by:</strong> {checkInStatus.checkedInBy}
                </Text>
              </div>
            </div>
            
            <!-- Actions -->
            <div class="space-y-3">
              <Button variant="secondary" size="lg" class="w-full" id="undoCheckInBtn">
                ‚Ü©Ô∏è Undo Check-In (If Mistake)
              </Button>
              <Button variant="ghost" size="base" class="w-full">
                <a href="/dashboard" class="block w-full">Return to Dashboard</a>
              </Button>
            </div>
          </div>
        </div>
        
      ) : (
        <!-- Ready to Check In - THE MOMENT OF TRUTH! üéä -->
        <div class="bg-white rounded-3xl shadow-xl overflow-hidden">
          
          <!-- Header -->
          <div class="bg-blue-600 p-6 text-center text-white">
            <div class="text-5xl mb-2">üéØ</div>
            <Text tag="h1" variant="textXL" class="font-bold mb-2">
              Ready to Check In
            </Text>
            <Text tag="p" variant="textBase" class="opacity-90">
              Verify the details and confirm check-in
            </Text>
          </div>
          
          <!-- User Details -->
          <div class="p-6">
            <Text tag="h2" variant="textLG" class="font-semibold text-gray-800 mb-4">
              üë§ Registration Details
            </Text>
            
            <div class="bg-blue-50 rounded-lg p-4 mb-6">
              <div class="grid grid-cols-1 gap-3">
                {registration?.registrationData && Object.entries(registration.registrationData).map(([key, value]) => (
                  <div class="flex justify-between">
                    <Text tag="span" variant="textSM" class="font-medium text-blue-700 capitalize">
                      {key.replace(/([A-Z])/g, ' $1').trim()}:
                    </Text>
                    <Text tag="span" variant="textSM" class="text-blue-900 font-semibold">
                      {String(value)}
                    </Text>
                  </div>
                ))}
              </div>
            </div>
            
            <!-- Registration Info -->
            <div class="bg-gray-50 rounded-lg p-4 mb-6">
              <Text tag="h3" variant="textBase" class="font-semibold text-gray-700 mb-2">
                üìã Registration Information
              </Text>
              <div class="space-y-1 text-gray-600">
                <Text tag="p" variant="textSM">
                  <strong>Registration ID:</strong> {registration?.id}
                </Text>
                <Text tag="p" variant="textSM">
                  <strong>Registered at:</strong> {registration && new Date(registration.registeredAt).toLocaleString()}
                </Text>
                <Text tag="p" variant="textSM">
                  <strong>Status:</strong> {registration?.tokenStatus === 'active' ? '‚úÖ Ready for check-in' : '‚ö†Ô∏è ' + registration?.tokenStatus}
                </Text>
              </div>
            </div>
            
            <!-- Check-In Actions -->
            <div class="space-y-3">
              <Button variant="primary" size="lg" class="w-full" id="checkInBtn">
                ‚úÖ Confirm Check-In
              </Button>
              <Button variant="ghost" size="base" class="w-full">
                <a href="/dashboard" class="block w-full">Cancel / Return to Dashboard</a>
              </Button>
            </div>
          </div>
        </div>
      )}
      
    </div>
  </div>
  
  <!-- JavaScript for Check-In Actions -->
  <script define:vars={{ token, registration }}>
    // üéä CHECK-IN FUNCTIONALITY - PURE JAVASCRIPT JOY! ‚ú®
    
    const checkInBtn = document.getElementById('checkInBtn');
    const undoCheckInBtn = document.getElementById('undoCheckInBtn');
    
    // Check-in button handler
    if (checkInBtn) {
      checkInBtn.addEventListener('click', async () => {
        checkInBtn.disabled = true;
        checkInBtn.innerHTML = '‚è≥ Checking in...';
        
        try {
          const response = await fetch(`/api/check-in/${token}/complete`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              workerInfo: 'Organization Staff' // TODO: Get actual worker info
            })
          });
          
          const result = await response.json();
          
          if (result.success) {
            // üéâ SUCCESS! Show celebration and reload
            checkInBtn.innerHTML = 'üéâ Check-in Successful!';
            checkInBtn.className = checkInBtn.className.replace('bg-blue-600', 'bg-green-600');
            
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            // ‚ùå Error handling
            checkInBtn.innerHTML = '‚ùå Check-in Failed';
            checkInBtn.className = checkInBtn.className.replace('bg-blue-600', 'bg-red-600');
            alert(`Check-in failed: ${result.message}`);
            
            setTimeout(() => {
              checkInBtn.disabled = false;
              checkInBtn.innerHTML = '‚úÖ Confirm Check-In';
              checkInBtn.className = checkInBtn.className.replace('bg-red-600', 'bg-blue-600');
            }, 3000);
          }
        } catch (error) {
          console.error('Check-in error:', error);
          checkInBtn.innerHTML = '‚ùå System Error';
          checkInBtn.className = checkInBtn.className.replace('bg-blue-600', 'bg-red-600');
          alert('System error during check-in. Please try again.');
          
          setTimeout(() => {
            checkInBtn.disabled = false;
            checkInBtn.innerHTML = '‚úÖ Confirm Check-In';
            checkInBtn.className = checkInBtn.className.replace('bg-red-600', 'bg-blue-600');
          }, 3000);
        }
      });
    }
    
    // Undo check-in button handler
    if (undoCheckInBtn) {
      undoCheckInBtn.addEventListener('click', async () => {
        if (!confirm('Are you sure you want to undo this check-in? This action will allow the person to be checked in again.')) {
          return;
        }
        
        undoCheckInBtn.disabled = true;
        undoCheckInBtn.innerHTML = '‚è≥ Undoing...';
        
        try {
          const response = await fetch(`/api/check-in/${token}/undo`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          const result = await response.json();
          
          if (result.success) {
            // üéâ SUCCESS! Reload to show updated state
            undoCheckInBtn.innerHTML = '‚úÖ Undo Successful!';
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            // ‚ùå Error handling
            undoCheckInBtn.innerHTML = '‚ùå Undo Failed';
            alert(`Undo failed: ${result.message || 'Unknown error'}`);
            
            setTimeout(() => {
              undoCheckInBtn.disabled = false;
              undoCheckInBtn.innerHTML = '‚Ü©Ô∏è Undo Check-In (If Mistake)';
            }, 3000);
          }
        } catch (error) {
          console.error('Undo error:', error);
          undoCheckInBtn.innerHTML = '‚ùå System Error';
          alert('System error during undo. Please try again.');
          
          setTimeout(() => {
            undoCheckInBtn.disabled = false;
            undoCheckInBtn.innerHTML = '‚Ü©Ô∏è Undo Check-In (If Mistake)';
          }, 3000);
        }
      });
    }
    
    console.log('üéØ Check-in scanner page loaded with MAXIMUM JOY!');
  </script>
</BaseLayout>