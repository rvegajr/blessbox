---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Button from "@/components/fundations/elements/Button.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Icons
import Mail from "@/components/fundations/icons/Mail.astro";
import CircleCheck from "@/components/fundations/icons/CircleCheck.astro";
import CircleX from "@/components/fundations/icons/CircleX.astro";
---

<BaseLayout>
  <section class="py-12">
    <Wrapper>
      <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="text-center mb-12">
          <div class="flex justify-center mb-4">
            <div class="bg-teal-100 p-4 rounded-2xl">
              <Mail class="w-8 h-8 text-teal-600" />
            </div>
          </div>
          <Text tag="h1" variant="display2XL" class="font-bold text-base-800 mb-4">
            Email Configuration Test
          </Text>
          <Text tag="p" variant="textLG" class="text-base-600 max-w-2xl mx-auto">
            Test your email setup for contact@yolovibecodebootcamp.com
          </Text>
        </div>

        <!-- Test Results -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
          <!-- Configuration Test -->
          <div class="bg-white rounded-2xl shadow-xl p-8">
            <div class="flex items-center mb-6">
              <div class="bg-blue-100 p-3 rounded-xl mr-4">
                <CircleCheck class="w-6 h-6 text-blue-600" />
              </div>
              <Text tag="h2" variant="displayMD" class="font-semibold text-base-800">
                Configuration Test
              </Text>
            </div>
            
            <Text tag="p" variant="textSM" class="text-base-600 mb-6">
              Test if your SMTP configuration is working correctly.
            </Text>
            
            <Button 
              variant="secondary" 
              size="medium" 
              class="w-full mb-4"
              id="testConfigBtn"
            >
              <span id="testConfigText">Test Configuration</span>
              <span id="testConfigLoader" class="hidden">Testing...</span>
            </Button>
            
            <div id="configResult" class="hidden p-4 rounded-lg text-sm"></div>
          </div>

          <!-- Send Test Email -->
          <div class="bg-white rounded-2xl shadow-xl p-8">
            <div class="flex items-center mb-6">
              <div class="bg-green-100 p-3 rounded-xl mr-4">
                <Mail class="w-6 h-6 text-green-600" />
              </div>
              <Text tag="h2" variant="displayMD" class="font-semibold text-base-800">
                Send Test Email
              </Text>
            </div>
            
            <Text tag="p" variant="textSM" class="text-base-600 mb-6">
              Send a test email to contact@yolovibecodebootcamp.com.
            </Text>
            
            <Button 
              variant="primary" 
              size="medium" 
              class="w-full mb-4"
              id="sendTestBtn"
            >
              <span id="sendTestText">Send Test Email</span>
              <span id="sendTestLoader" class="hidden">Sending...</span>
            </Button>
            
            <div id="emailResult" class="hidden p-4 rounded-lg text-sm"></div>
          </div>
        </div>

        <!-- Setup Instructions -->
        <div class="bg-gradient-to-br from-teal-50 to-blue-50 rounded-2xl p-8">
          <Text tag="h2" variant="displayMD" class="font-semibold text-base-800 mb-6">
            Setup Instructions
          </Text>
          
          <div class="space-y-6">
            <div>
              <Text tag="h3" variant="textLG" class="font-medium text-base-700 mb-3">
                1. Create Environment Variables
              </Text>
              <Text tag="p" variant="textSM" class="text-base-600 mb-3">
                Create a <code class="bg-base-200 px-2 py-1 rounded text-xs">.env.local</code> file in your project root with:
              </Text>
              <div class="bg-base-800 rounded-lg p-4 overflow-x-auto">
                <pre class="text-green-400 text-xs"><code>SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=contact@yolovibecodebootcamp.com
SMTP_PASS=your_app_specific_password</code></pre>
              </div>
            </div>

            <div>
              <Text tag="h3" variant="textLG" class="font-medium text-base-700 mb-3">
                2. Gmail Setup (Recommended for Testing)
              </Text>
              <ul class="space-y-2 text-sm text-base-600">
                <li class="flex items-start">
                  <span class="text-teal-600 mr-2">•</span>
                  Enable 2-factor authentication on your Gmail account
                </li>
                <li class="flex items-start">
                  <span class="text-teal-600 mr-2">•</span>
                  Go to Google Account Settings → Security → App passwords
                </li>
                <li class="flex items-start">
                  <span class="text-teal-600 mr-2">•</span>
                  Generate an app password for "Mail"
                </li>
                <li class="flex items-start">
                  <span class="text-teal-600 mr-2">•</span>
                  Use the app password (not your regular password) in SMTP_PASS
                </li>
              </ul>
            </div>

            <div>
              <Text tag="h3" variant="textLG" class="font-medium text-base-700 mb-3">
                3. Alternative Providers
              </Text>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                <div class="bg-white rounded-lg p-4">
                  <Text tag="h4" variant="textSM" class="font-medium text-base-700 mb-2">
                    Office 365
                  </Text>
                  <code class="text-xs text-base-600">
                    SMTP_HOST=smtp.office365.com<br>
                    SMTP_PORT=587
                  </code>
                </div>
                <div class="bg-white rounded-lg p-4">
                  <Text tag="h4" variant="textSM" class="font-medium text-base-700 mb-2">
                    Yahoo Mail
                  </Text>
                  <code class="text-xs text-base-600">
                    SMTP_HOST=smtp.mail.yahoo.com<br>
                    SMTP_PORT=587
                  </code>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Configuration Test
    const testConfigBtn = document.getElementById('testConfigBtn') as HTMLButtonElement;
    const testConfigText = document.getElementById('testConfigText') as HTMLSpanElement;
    const testConfigLoader = document.getElementById('testConfigLoader') as HTMLSpanElement;
    const configResult = document.getElementById('configResult') as HTMLDivElement;

    // Send Test Email
    const sendTestBtn = document.getElementById('sendTestBtn') as HTMLButtonElement;
    const sendTestText = document.getElementById('sendTestText') as HTMLSpanElement;
    const sendTestLoader = document.getElementById('sendTestLoader') as HTMLSpanElement;
    const emailResult = document.getElementById('emailResult') as HTMLDivElement;

    // Test Configuration
    if (testConfigBtn) {
      testConfigBtn.addEventListener('click', async function() {
        testConfigBtn.disabled = true;
        testConfigText.classList.add('hidden');
        testConfigLoader.classList.remove('hidden');
        configResult.classList.add('hidden');

        try {
          const response = await fetch('/api/test-email', {
            method: 'GET',
          });
          const result = await response.json();

          if (result.success) {
            configResult.className = 'p-4 rounded-lg text-sm bg-green-50 text-green-800 border border-green-200';
            configResult.innerHTML = `
              <div class="flex items-center mb-2">
                <span class="text-green-600 mr-2">✅</span>
                <strong>Configuration Valid!</strong>
              </div>
              <div class="text-xs space-y-1">
                <div>Host: ${result.config?.host || 'Not set'}</div>
                <div>Port: ${result.config?.port || 'Not set'}</div>
                <div>User: ${result.config?.user || 'Not set'}</div>
              </div>
            `;
          } else {
            configResult.className = 'p-4 rounded-lg text-sm bg-red-50 text-red-800 border border-red-200';
            configResult.innerHTML = `
              <div class="flex items-center mb-2">
                <span class="text-red-600 mr-2">❌</span>
                <strong>Configuration Error</strong>
              </div>
              <div class="text-xs">${result.message}</div>
              ${result.details ? `<div class="text-xs mt-2 opacity-75">${result.details}</div>` : ''}
            `;
          }
          configResult.classList.remove('hidden');
        } catch (error) {
          configResult.className = 'p-4 rounded-lg text-sm bg-red-50 text-red-800 border border-red-200';
          configResult.textContent = 'Network error. Please check your connection.';
          configResult.classList.remove('hidden');
        } finally {
          testConfigBtn.disabled = false;
          testConfigText.classList.remove('hidden');
          testConfigLoader.classList.add('hidden');
        }
      });
    }

    // Send Test Email
    if (sendTestBtn) {
      sendTestBtn.addEventListener('click', async function() {
        sendTestBtn.disabled = true;
        sendTestText.classList.add('hidden');
        sendTestLoader.classList.remove('hidden');
        emailResult.classList.add('hidden');

        try {
          const response = await fetch('/api/test-email', {
            method: 'POST',
          });
          const result = await response.json();

          if (result.success) {
            emailResult.className = 'p-4 rounded-lg text-sm bg-green-50 text-green-800 border border-green-200';
            emailResult.innerHTML = `
              <div class="flex items-center mb-2">
                <span class="text-green-600 mr-2">✅</span>
                <strong>Email Sent!</strong>
              </div>
              <div class="text-xs">${result.message}</div>
            `;
          } else {
            emailResult.className = 'p-4 rounded-lg text-sm bg-red-50 text-red-800 border border-red-200';
            emailResult.innerHTML = `
              <div class="flex items-center mb-2">
                <span class="text-red-600 mr-2">❌</span>
                <strong>Email Failed</strong>
              </div>
              <div class="text-xs">${result.message}</div>
              ${result.error ? `<div class="text-xs mt-2 opacity-75">${result.error}</div>` : ''}
            `;
          }
          emailResult.classList.remove('hidden');
        } catch (error) {
          emailResult.className = 'p-4 rounded-lg text-sm bg-red-50 text-red-800 border border-red-200';
          emailResult.textContent = 'Network error. Please check your connection.';
          emailResult.classList.remove('hidden');
        } finally {
          sendTestBtn.disabled = false;
          sendTestText.classList.remove('hidden');
          sendTestLoader.classList.add('hidden');
        }
      });
    }
  });
</script>